// <auto-generated />
using System;
using HMS.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HMS.DAL.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    [Migration("20230823070227_a")]
    partial class a
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HMS.Models.BloodBank", b =>
                {
                    b.Property<int>("BloodBankID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BloodBankID"), 1L, 1);

                    b.Property<string>("BloodType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("BloodBankID");

                    b.ToTable("BloodBanks");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Ambulance", b =>
                {
                    b.Property<int>("AmbulanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmbulanceID"), 1L, 1);

                    b.Property<string>("AmbulanceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AmbulanceID");

                    b.ToTable("Ambulances");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Appointment", b =>
                {
                    b.Property<int>("AppointmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentID"), 1L, 1);

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("AppointmentStatus")
                        .HasColumnType("bit");

                    b.Property<string>("AppointmentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppointmentID");

                    b.HasIndex("DoctorID");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"), 1L, 1);

                    b.Property<string>("DepartmentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("HMS.Models.DbModels+DischargeTransfer", b =>
                {
                    b.Property<int>("DT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DT_ID"), 1L, 1);

                    b.Property<DateTime>("DischargeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DischargeSummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.HasKey("DT_ID");

                    b.HasIndex("PatientID");

                    b.ToTable("DischargeTransfers");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Doctor", b =>
                {
                    b.Property<int>("DoctorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorID"), 1L, 1);

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education_Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkShift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoctorID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceID"), 1L, 1);

                    b.Property<decimal>("Bill_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Due")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreparedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transaction_Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceID");

                    b.HasIndex("PatientID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("HMS.Models.DbModels+LabEquipment", b =>
                {
                    b.Property<int>("EquipmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentID"), 1L, 1);

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("EquipmentID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("LabEquipments");
                });

            modelBuilder.Entity("HMS.Models.DbModels+LabTechnician", b =>
                {
                    b.Property<int>("TechnicianID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechnicianID"), 1L, 1);

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Education_Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TechnicianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnicianType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkShift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnicianID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("LabTechnicians");
                });

            modelBuilder.Entity("HMS.Models.DbModels+LabTest", b =>
                {
                    b.Property<int>("TestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestID"), 1L, 1);

                    b.Property<int?>("LabTechnicianTechnicianID")
                        .HasColumnType("int");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TechnicianID")
                        .HasColumnType("int");

                    b.Property<string>("TestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TestID");

                    b.HasIndex("LabTechnicianTechnicianID");

                    b.HasIndex("PatientID");

                    b.ToTable("LabTests");
                });

            modelBuilder.Entity("HMS.Models.DbModels+MedicalRecords", b =>
                {
                    b.Property<int>("MedicalRecordsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalRecordsID"), 1L, 1);

                    b.Property<int?>("LabTestTestID")
                        .HasColumnType("int");

                    b.Property<string>("MedicalHistory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<bool>("PatientType")
                        .HasColumnType("bit");

                    b.Property<int?>("PrescriptionsPrescriptionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MedicalRecordsID");

                    b.HasIndex("LabTestTestID");

                    b.HasIndex("PatientID");

                    b.HasIndex("PrescriptionsPrescriptionID");

                    b.ToTable("MedicalRecords");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Medicine", b =>
                {
                    b.Property<int>("MedicineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicineID"), 1L, 1);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenericName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellQuantity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MedicineID");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Morgue", b =>
                {
                    b.Property<int>("MorgueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MorgueID"), 1L, 1);

                    b.Property<string>("CauseOfDeath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfDeath")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeceasedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPatient")
                        .HasColumnType("bit");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.HasKey("MorgueID");

                    b.ToTable("Morgues");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Nurse", b =>
                {
                    b.Property<int>("NurseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NurseID"), 1L, 1);

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Education_Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NurseLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkShift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NurseID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Nurses");
                });

            modelBuilder.Entity("HMS.Models.DbModels+OtherEmployee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"), 1L, 1);

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Education_Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkShift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("OtherEmployees");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Outdoor", b =>
                {
                    b.Property<int>("OutdoorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutdoorID"), 1L, 1);

                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmissionRequired")
                        .HasColumnType("bit");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TreatmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TreatmentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OutdoorID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("PatientID");

                    b.ToTable("Outdoors");
                });

            modelBuilder.Entity("HMS.Models.DbModels+PatientRegister", b =>
                {
                    b.Property<int>("PatientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BloodType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTransferred")
                        .HasColumnType("bit");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WardID")
                        .HasColumnType("int");

                    b.HasKey("PatientID");

                    b.HasIndex("WardID");

                    b.ToTable("PatientRegisters");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Prescriptions", b =>
                {
                    b.Property<int>("PrescriptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrescriptionID"), 1L, 1);

                    b.Property<bool>("AdmissionSuggested")
                        .HasColumnType("bit");

                    b.Property<string>("Advice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DiagnosisDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiagonesNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FollowUpInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MedicinID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NextVisit")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PrescriptionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgressNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<DateTime>("SymptomStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Symptoms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TestID")
                        .HasColumnType("int");

                    b.HasKey("PrescriptionID");

                    b.HasIndex("DoctorID");

                    b.HasIndex("PatientID");

                    b.HasIndex("TestID");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("HMS.Models.DbModels+SurgeryProcedure", b =>
                {
                    b.Property<int>("SurgeryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SurgeryID"), 1L, 1);

                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("Postoperative_Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preoperative_Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrescriptionID")
                        .HasColumnType("int");

                    b.Property<string>("ProcedureType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SurgeryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TestID")
                        .HasColumnType("int");

                    b.HasKey("SurgeryID");

                    b.HasIndex("DoctorID");

                    b.HasIndex("PatientID");

                    b.HasIndex("PrescriptionID");

                    b.HasIndex("TestID");

                    b.ToTable("SurgeryProcedures");
                });

            modelBuilder.Entity("HMS.Models.DbModels+WardCabin", b =>
                {
                    b.Property<int>("WardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WardID"), 1L, 1);

                    b.Property<int>("BedCabinNumber")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("WardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WardID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("WardCabins");
                });

            modelBuilder.Entity("HMS.Models.DbModels+WasteManagement", b =>
                {
                    b.Property<int>("WasteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WasteID"), 1L, 1);

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DisposalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisposalMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NextScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("WasteType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WasteID");

                    b.ToTable("WasteManagements");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Appointment", b =>
                {
                    b.HasOne("HMS.Models.DbModels+Doctor", null)
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HMS.Models.DbModels+DischargeTransfer", b =>
                {
                    b.HasOne("HMS.Models.DbModels+PatientRegister", "Patient")
                        .WithMany("DischargeTransfers")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Doctor", b =>
                {
                    b.HasOne("HMS.Models.DbModels+Department", null)
                        .WithMany("Doctors")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HMS.Models.DbModels+Invoice", b =>
                {
                    b.HasOne("HMS.Models.DbModels+PatientRegister", "PatientRegisters")
                        .WithMany("Invoices")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientRegisters");
                });

            modelBuilder.Entity("HMS.Models.DbModels+LabEquipment", b =>
                {
                    b.HasOne("HMS.Models.DbModels+Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("HMS.Models.DbModels+LabTechnician", b =>
                {
                    b.HasOne("HMS.Models.DbModels+Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("HMS.Models.DbModels+LabTest", b =>
                {
                    b.HasOne("HMS.Models.DbModels+LabTechnician", null)
                        .WithMany("Labtest")
                        .HasForeignKey("LabTechnicianTechnicianID");

                    b.HasOne("HMS.Models.DbModels+PatientRegister", "PatientRegister")
                        .WithMany()
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientRegister");
                });

            modelBuilder.Entity("HMS.Models.DbModels+MedicalRecords", b =>
                {
                    b.HasOne("HMS.Models.DbModels+LabTest", null)
                        .WithMany("MedicalRecords")
                        .HasForeignKey("LabTestTestID");

                    b.HasOne("HMS.Models.DbModels+PatientRegister", "Patient")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HMS.Models.DbModels+Prescriptions", null)
                        .WithMany("MedicalRecords")
                        .HasForeignKey("PrescriptionsPrescriptionID");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Nurse", b =>
                {
                    b.HasOne("HMS.Models.DbModels+Department", "Departments")
                        .WithMany("Nurses")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Outdoor", b =>
                {
                    b.HasOne("HMS.Models.DbModels+Invoice", "Invoice")
                        .WithMany("Outdoors")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HMS.Models.DbModels+PatientRegister", "PatientRegister")
                        .WithMany()
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("PatientRegister");
                });

            modelBuilder.Entity("HMS.Models.DbModels+PatientRegister", b =>
                {
                    b.HasOne("HMS.Models.DbModels+WardCabin", "WardCabin")
                        .WithMany("PatientRegisters")
                        .HasForeignKey("WardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WardCabin");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Prescriptions", b =>
                {
                    b.HasOne("HMS.Models.DbModels+Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("DoctorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HMS.Models.DbModels+PatientRegister", "PatientRegister")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HMS.Models.DbModels+LabTest", "LabTest")
                        .WithMany("Prescriptions")
                        .HasForeignKey("TestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("LabTest");

                    b.Navigation("PatientRegister");
                });

            modelBuilder.Entity("HMS.Models.DbModels+SurgeryProcedure", b =>
                {
                    b.HasOne("HMS.Models.DbModels+Doctor", "Doctor")
                        .WithMany("SurgeryProcedures")
                        .HasForeignKey("DoctorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HMS.Models.DbModels+PatientRegister", "PatientRegister")
                        .WithMany("SurgeryProcedures")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HMS.Models.DbModels+Prescriptions", "Prescription")
                        .WithMany("SurgeryProcedures")
                        .HasForeignKey("PrescriptionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HMS.Models.DbModels+LabTest", "LabTest")
                        .WithMany("SurgeryProcedures")
                        .HasForeignKey("TestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("LabTest");

                    b.Navigation("PatientRegister");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("HMS.Models.DbModels+WardCabin", b =>
                {
                    b.HasOne("HMS.Models.DbModels+Department", "Departments")
                        .WithMany("WardCabins")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Department", b =>
                {
                    b.Navigation("Doctors");

                    b.Navigation("Nurses");

                    b.Navigation("WardCabins");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Doctor", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Prescriptions");

                    b.Navigation("SurgeryProcedures");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Invoice", b =>
                {
                    b.Navigation("Outdoors");
                });

            modelBuilder.Entity("HMS.Models.DbModels+LabTechnician", b =>
                {
                    b.Navigation("Labtest");
                });

            modelBuilder.Entity("HMS.Models.DbModels+LabTest", b =>
                {
                    b.Navigation("MedicalRecords");

                    b.Navigation("Prescriptions");

                    b.Navigation("SurgeryProcedures");
                });

            modelBuilder.Entity("HMS.Models.DbModels+PatientRegister", b =>
                {
                    b.Navigation("DischargeTransfers");

                    b.Navigation("Invoices");

                    b.Navigation("MedicalRecords");

                    b.Navigation("Prescriptions");

                    b.Navigation("SurgeryProcedures");
                });

            modelBuilder.Entity("HMS.Models.DbModels+Prescriptions", b =>
                {
                    b.Navigation("MedicalRecords");

                    b.Navigation("SurgeryProcedures");
                });

            modelBuilder.Entity("HMS.Models.DbModels+WardCabin", b =>
                {
                    b.Navigation("PatientRegisters");
                });
#pragma warning restore 612, 618
        }
    }
}
